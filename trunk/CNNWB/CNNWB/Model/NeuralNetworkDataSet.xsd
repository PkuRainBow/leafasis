<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="NeuralNetworkDataSet" targetNamespace="http://tempuri.org/NeuralNetworkDataSet.xsd" xmlns:mstns="http://tempuri.org/NeuralNetworkDataSet.xsd" xmlns="http://tempuri.org/NeuralNetworkDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="NeuralNetworkConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="NeuralNetworkConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CNNWB.Properties.Settings.GlobalReference.Default.NeuralNetworkConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ConnectionsTableAdapter" GeneratorDataComponentClassName="ConnectionsTableAdapter" Name="Connections" UserDataComponentName="ConnectionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.Connections" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Connections] WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([NeuronIndex] = @Original_NeuronIndex) AND ([ConnectionIndex] = @Original_ConnectionIndex) AND ([ToNeuronIndex] = @Original_ToNeuronIndex) AND ([ToWeightIndex] = @Original_ToWeightIndex))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ConnectionIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ConnectionIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ToNeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToNeuronIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ToWeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToWeightIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Connections] ([NetworkId], [LayerIndex], [NeuronIndex], [ConnectionIndex], [ToNeuronIndex], [ToWeightIndex]) VALUES (@NetworkId, @LayerIndex, @NeuronIndex, @ConnectionIndex, @ToNeuronIndex, @ToWeightIndex);
SELECT NetworkId, LayerIndex, NeuronIndex, ConnectionIndex, ToNeuronIndex, ToWeightIndex FROM Connections WHERE (ConnectionIndex = @ConnectionIndex) AND (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (NeuronIndex = @NeuronIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ConnectionIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ConnectionIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ToNeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToNeuronIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ToWeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToWeightIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT NetworkId, LayerIndex, NeuronIndex, ConnectionIndex, ToNeuronIndex, ToWeightIndex FROM dbo.Connections</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Connections] SET [NetworkId] = @NetworkId, [LayerIndex] = @LayerIndex, [NeuronIndex] = @NeuronIndex, [ConnectionIndex] = @ConnectionIndex, [ToNeuronIndex] = @ToNeuronIndex, [ToWeightIndex] = @ToWeightIndex WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([NeuronIndex] = @Original_NeuronIndex) AND ([ConnectionIndex] = @Original_ConnectionIndex) AND ([ToNeuronIndex] = @Original_ToNeuronIndex) AND ([ToWeightIndex] = @Original_ToWeightIndex));
SELECT NetworkId, LayerIndex, NeuronIndex, ConnectionIndex, ToNeuronIndex, ToWeightIndex FROM Connections WHERE (ConnectionIndex = @ConnectionIndex) AND (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (NeuronIndex = @NeuronIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ConnectionIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ConnectionIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ToNeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToNeuronIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ToWeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToWeightIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ConnectionIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ConnectionIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ToNeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToNeuronIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ToWeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToWeightIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NetworkId" DataSetColumn="NetworkId" />
              <Mapping SourceColumn="LayerIndex" DataSetColumn="LayerIndex" />
              <Mapping SourceColumn="NeuronIndex" DataSetColumn="NeuronIndex" />
              <Mapping SourceColumn="ConnectionIndex" DataSetColumn="ConnectionIndex" />
              <Mapping SourceColumn="ToNeuronIndex" DataSetColumn="ToNeuronIndex" />
              <Mapping SourceColumn="ToWeightIndex" DataSetColumn="ToWeightIndex" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="KernelTypesTableAdapter" GeneratorDataComponentClassName="KernelTypesTableAdapter" Name="KernelTypes" UserDataComponentName="KernelTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.KernelTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[KernelTypes] WHERE (([KernelType] = @Original_KernelType) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_KernelType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="KernelType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[KernelTypes] ([Name]) VALUES (@Name);
SELECT KernelType, Name FROM KernelTypes WHERE (KernelType = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT KernelType, Name FROM dbo.KernelTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[KernelTypes] SET [Name] = @Name WHERE (([KernelType] = @Original_KernelType) AND ([Name] = @Original_Name));
SELECT KernelType, Name FROM KernelTypes WHERE (KernelType = @KernelType)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_KernelType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="KernelType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="KernelType" ColumnName="KernelType" DataSourceName="NeuralNetwork.dbo.KernelTypes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@KernelType" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="KernelType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="KernelType" DataSetColumn="KernelType" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LayersTableAdapter" GeneratorDataComponentClassName="LayersTableAdapter" Name="Layers" UserDataComponentName="LayersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.Layers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Layers] WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([LayerType] = @Original_LayerType) AND ([KernelType] = @Original_KernelType) AND ([NeuronCount] = @Original_NeuronCount) AND ([UseMapInfo] = @Original_UseMapInfo) AND ([MapCount] = @Original_MapCount) AND ([MapWidth] = @Original_MapWidth) AND ([MapHeight] = @Original_MapHeight) AND ([IsFullyMapped] = @Original_IsFullyMapped) AND ((@IsNull_ReceptiveFieldWidth = 1 AND [ReceptiveFieldWidth] IS NULL) OR ([ReceptiveFieldWidth] = @Original_ReceptiveFieldWidth)) AND ((@IsNull_ReceptiveFieldHeight = 1 AND [ReceptiveFieldHeight] IS NULL) OR ([ReceptiveFieldHeight] = @Original_ReceptiveFieldHeight)) AND ([LockedWeights] = @Original_LockedWeights))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_KernelType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="KernelType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NeuronCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_UseMapInfo" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="UseMapInfo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapWidth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapHeight" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsFullyMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFullyMapped" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReceptiveFieldWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldWidth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceptiveFieldWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldWidth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReceptiveFieldHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldHeight" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceptiveFieldHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldHeight" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_LockedWeights" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockedWeights" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Layers] ([NetworkId], [LayerIndex], [LayerType], [KernelType], [NeuronCount], [UseMapInfo], [MapCount], [MapWidth], [MapHeight], [IsFullyMapped], [ReceptiveFieldWidth], [ReceptiveFieldHeight], [LockedWeights]) VALUES (@NetworkId, @LayerIndex, @LayerType, @KernelType, @NeuronCount, @UseMapInfo, @MapCount, @MapWidth, @MapHeight, @IsFullyMapped, @ReceptiveFieldWidth, @ReceptiveFieldHeight, @LockedWeights);
SELECT NetworkId, LayerIndex, LayerType, KernelType, NeuronCount, UseMapInfo, MapCount, MapWidth, MapHeight, IsFullyMapped, ReceptiveFieldWidth, ReceptiveFieldHeight, LockedWeights FROM Layers WHERE (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@KernelType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="KernelType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NeuronCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@UseMapInfo" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="UseMapInfo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MapCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MapWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapWidth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MapHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapHeight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsFullyMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFullyMapped" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceptiveFieldWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldWidth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceptiveFieldHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldHeight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@LockedWeights" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockedWeights" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT NetworkId, LayerIndex, LayerType, KernelType, NeuronCount, UseMapInfo, MapCount, MapWidth, MapHeight, IsFullyMapped, ReceptiveFieldWidth, ReceptiveFieldHeight, LockedWeights FROM dbo.Layers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Layers] SET [NetworkId] = @NetworkId, [LayerIndex] = @LayerIndex, [LayerType] = @LayerType, [KernelType] = @KernelType, [NeuronCount] = @NeuronCount, [UseMapInfo] = @UseMapInfo, [MapCount] = @MapCount, [MapWidth] = @MapWidth, [MapHeight] = @MapHeight, [IsFullyMapped] = @IsFullyMapped, [ReceptiveFieldWidth] = @ReceptiveFieldWidth, [ReceptiveFieldHeight] = @ReceptiveFieldHeight, [LockedWeights] = @LockedWeights WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([LayerType] = @Original_LayerType) AND ([KernelType] = @Original_KernelType) AND ([NeuronCount] = @Original_NeuronCount) AND ([UseMapInfo] = @Original_UseMapInfo) AND ([MapCount] = @Original_MapCount) AND ([MapWidth] = @Original_MapWidth) AND ([MapHeight] = @Original_MapHeight) AND ([IsFullyMapped] = @Original_IsFullyMapped) AND ((@IsNull_ReceptiveFieldWidth = 1 AND [ReceptiveFieldWidth] IS NULL) OR ([ReceptiveFieldWidth] = @Original_ReceptiveFieldWidth)) AND ((@IsNull_ReceptiveFieldHeight = 1 AND [ReceptiveFieldHeight] IS NULL) OR ([ReceptiveFieldHeight] = @Original_ReceptiveFieldHeight)) AND ([LockedWeights] = @Original_LockedWeights));
SELECT NetworkId, LayerIndex, LayerType, KernelType, NeuronCount, UseMapInfo, MapCount, MapWidth, MapHeight, IsFullyMapped, ReceptiveFieldWidth, ReceptiveFieldHeight, LockedWeights FROM Layers WHERE (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@KernelType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="KernelType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NeuronCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@UseMapInfo" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="UseMapInfo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MapCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MapWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapWidth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MapHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapHeight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsFullyMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFullyMapped" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceptiveFieldWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldWidth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceptiveFieldHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldHeight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@LockedWeights" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockedWeights" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_KernelType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="KernelType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NeuronCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_UseMapInfo" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="UseMapInfo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapWidth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapHeight" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsFullyMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsFullyMapped" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReceptiveFieldWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldWidth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceptiveFieldWidth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldWidth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReceptiveFieldHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldHeight" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceptiveFieldHeight" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceptiveFieldHeight" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_LockedWeights" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="LockedWeights" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NetworkId" DataSetColumn="NetworkId" />
              <Mapping SourceColumn="LayerIndex" DataSetColumn="LayerIndex" />
              <Mapping SourceColumn="LayerType" DataSetColumn="LayerType" />
              <Mapping SourceColumn="KernelType" DataSetColumn="KernelType" />
              <Mapping SourceColumn="NeuronCount" DataSetColumn="NeuronCount" />
              <Mapping SourceColumn="UseMapInfo" DataSetColumn="UseMapInfo" />
              <Mapping SourceColumn="MapCount" DataSetColumn="MapCount" />
              <Mapping SourceColumn="MapWidth" DataSetColumn="MapWidth" />
              <Mapping SourceColumn="MapHeight" DataSetColumn="MapHeight" />
              <Mapping SourceColumn="IsFullyMapped" DataSetColumn="IsFullyMapped" />
              <Mapping SourceColumn="ReceptiveFieldWidth" DataSetColumn="ReceptiveFieldWidth" />
              <Mapping SourceColumn="ReceptiveFieldHeight" DataSetColumn="ReceptiveFieldHeight" />
              <Mapping SourceColumn="LockedWeights" DataSetColumn="LockedWeights" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LayerTypesTableAdapter" GeneratorDataComponentClassName="LayerTypesTableAdapter" Name="LayerTypes" UserDataComponentName="LayerTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.LayerTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LayerTypes] WHERE (([LayerType] = @Original_LayerType) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LayerTypes] ([Name]) VALUES (@Name);
SELECT LayerType, Name FROM LayerTypes WHERE (LayerType = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LayerType, Name FROM dbo.LayerTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LayerTypes] SET [Name] = @Name WHERE (([LayerType] = @Original_LayerType) AND ([Name] = @Original_Name));
SELECT LayerType, Name FROM LayerTypes WHERE (LayerType = @LayerType)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LayerType" ColumnName="LayerType" DataSourceName="NeuralNetwork.dbo.LayerTypes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LayerType" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LayerType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LayerType" DataSetColumn="LayerType" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TrainingRatesTableAdapter" GeneratorDataComponentClassName="TrainingRatesTableAdapter" Name="TrainingRates" UserDataComponentName="TrainingRatesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT NetworkId, RateIndex, Name, [Index], Rate, Epochs, MinimumRate, DecayFactor, DecayAfterEpochs, WeightSaveTreshold, Distorted, SameDistortionsForEpochs, SeverityFactor, MaxScaling, MaxRotation, ElasticSigma, ElasticScaling FROM TrainingRates</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Rate" DataSetColumn="Rate" />
              <Mapping SourceColumn="Epochs" DataSetColumn="Epochs" />
              <Mapping SourceColumn="MinimumRate" DataSetColumn="MinimumRate" />
              <Mapping SourceColumn="DecayFactor" DataSetColumn="DecayFactor" />
              <Mapping SourceColumn="DecayAfterEpochs" DataSetColumn="DecayAfterEpochs" />
              <Mapping SourceColumn="WeightSaveTreshold" DataSetColumn="WeightSaveTreshold" />
              <Mapping SourceColumn="Distorted" DataSetColumn="Distorted" />
              <Mapping SourceColumn="SameDistortionsForEpochs" DataSetColumn="SameDistortionsForEpochs" />
              <Mapping SourceColumn="SeverityFactor" DataSetColumn="SeverityFactor" />
              <Mapping SourceColumn="MaxScaling" DataSetColumn="MaxScaling" />
              <Mapping SourceColumn="MaxRotation" DataSetColumn="MaxRotation" />
              <Mapping SourceColumn="ElasticSigma" DataSetColumn="ElasticSigma" />
              <Mapping SourceColumn="ElasticScaling" DataSetColumn="ElasticScaling" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MappingsTableAdapter" GeneratorDataComponentClassName="MappingsTableAdapter" Name="Mappings" UserDataComponentName="MappingsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.Mappings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Mappings] WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([PreviousMapIndex] = @Original_PreviousMapIndex) AND ([CurrentMapIndex] = @Original_CurrentMapIndex) AND ([IsMapped] = @Original_IsMapped))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PreviousMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PreviousMapIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CurrentMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CurrentMapIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsMapped" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Mappings] ([NetworkId], [LayerIndex], [PreviousMapIndex], [CurrentMapIndex], [IsMapped]) VALUES (@NetworkId, @LayerIndex, @PreviousMapIndex, @CurrentMapIndex, @IsMapped);
SELECT NetworkId, LayerIndex, PreviousMapIndex, CurrentMapIndex, IsMapped FROM Mappings WHERE (CurrentMapIndex = @CurrentMapIndex) AND (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (PreviousMapIndex = @PreviousMapIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PreviousMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PreviousMapIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CurrentMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CurrentMapIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsMapped" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT NetworkId, LayerIndex, PreviousMapIndex, CurrentMapIndex, IsMapped FROM dbo.Mappings</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Mappings] SET [NetworkId] = @NetworkId, [LayerIndex] = @LayerIndex, [PreviousMapIndex] = @PreviousMapIndex, [CurrentMapIndex] = @CurrentMapIndex, [IsMapped] = @IsMapped WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([PreviousMapIndex] = @Original_PreviousMapIndex) AND ([CurrentMapIndex] = @Original_CurrentMapIndex) AND ([IsMapped] = @Original_IsMapped));
SELECT NetworkId, LayerIndex, PreviousMapIndex, CurrentMapIndex, IsMapped FROM Mappings WHERE (CurrentMapIndex = @CurrentMapIndex) AND (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (PreviousMapIndex = @PreviousMapIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PreviousMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PreviousMapIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CurrentMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CurrentMapIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsMapped" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PreviousMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PreviousMapIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CurrentMapIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CurrentMapIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsMapped" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsMapped" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NetworkId" DataSetColumn="NetworkId" />
              <Mapping SourceColumn="LayerIndex" DataSetColumn="LayerIndex" />
              <Mapping SourceColumn="PreviousMapIndex" DataSetColumn="PreviousMapIndex" />
              <Mapping SourceColumn="CurrentMapIndex" DataSetColumn="CurrentMapIndex" />
              <Mapping SourceColumn="IsMapped" DataSetColumn="IsMapped" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MNISTTestingTableAdapter" GeneratorDataComponentClassName="MNISTTestingTableAdapter" Name="MNISTTesting" UserDataComponentName="MNISTTestingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.MNISTTesting" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MNISTTesting] WHERE (([Index] = @Original_Index) AND ([Label] = @Original_Label) AND ([Image] = @Original_Image))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Index" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Index" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MNISTTesting] ([Label], [Image]) VALUES (@Label, @Image);
SELECT [Index], Label, Image FROM MNISTTesting WHERE ([Index] = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [Index], Label, Image FROM dbo.MNISTTesting</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MNISTTesting] SET [Label] = @Label, [Image] = @Image WHERE (([Index] = @Original_Index) AND ([Label] = @Original_Label) AND ([Image] = @Original_Image));
SELECT [Index], Label, Image FROM MNISTTesting WHERE ([Index] = @Index)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Index" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Index" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Index" ColumnName="Index" DataSourceName="NeuralNetwork.dbo.MNISTTesting" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Index" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Index" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Index" DataSetColumn="Index" />
              <Mapping SourceColumn="Label" DataSetColumn="Label" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MNISTTrainingTableAdapter" GeneratorDataComponentClassName="MNISTTrainingTableAdapter" Name="MNISTTraining" UserDataComponentName="MNISTTrainingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.MNISTTraining" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MNISTTraining] WHERE (([Index] = @Original_Index) AND ([Label] = @Original_Label) AND ([Image] = @Original_Image))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Index" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Index" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MNISTTraining] ([Label], [Image]) VALUES (@Label, @Image);
SELECT [Index], Label, Image FROM MNISTTraining WHERE ([Index] = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [Index], Label, Image FROM dbo.MNISTTraining</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MNISTTraining] SET [Label] = @Label, [Image] = @Image WHERE (([Index] = @Original_Index) AND ([Label] = @Original_Label) AND ([Image] = @Original_Image));
SELECT [Index], Label, Image FROM MNISTTraining WHERE ([Index] = @Index)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Index" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Index" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Label" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Label" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_Image" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Index" ColumnName="Index" DataSourceName="NeuralNetwork.dbo.MNISTTraining" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Index" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Index" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Index" DataSetColumn="Index" />
              <Mapping SourceColumn="Label" DataSetColumn="Label" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NeuralNetworksTableAdapter" GeneratorDataComponentClassName="NeuralNetworksTableAdapter" Name="NeuralNetworks" UserDataComponentName="NeuralNetworksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.NeuralNetworks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [NeuralNetworks] WHERE (([NetworkId] = @Original_NetworkId) AND ([Name] = @Original_Name) AND ([CreatedOn] = @Original_CreatedOn) AND ([DMicron] = @Original_DMicron))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreatedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedOn" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_DMicron" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DMicron" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [NeuralNetworks] ([NetworkId], [Name], [CreatedOn], [DMicron]) VALUES (@NetworkId, @Name, @CreatedOn, @DMicron);
SELECT NetworkId, Name, CreatedOn, DMicron FROM NeuralNetworks WHERE (NetworkId = @NetworkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@DMicron" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DMicron" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT NetworkId, Name, CreatedOn, DMicron FROM NeuralNetworks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [NeuralNetworks] SET [NetworkId] = @NetworkId, [Name] = @Name, [CreatedOn] = @CreatedOn, [DMicron] = @DMicron WHERE (([NetworkId] = @Original_NetworkId) AND ([Name] = @Original_Name) AND ([CreatedOn] = @Original_CreatedOn) AND ([DMicron] = @Original_DMicron));
SELECT NetworkId, Name, CreatedOn, DMicron FROM NeuralNetworks WHERE (NetworkId = @NetworkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@CreatedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedOn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@DMicron" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DMicron" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreatedOn" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreatedOn" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_DMicron" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DMicron" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NetworkId" DataSetColumn="NetworkId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="CreatedOn" DataSetColumn="CreatedOn" />
              <Mapping SourceColumn="DMicron" DataSetColumn="DMicron" />
              <Mapping SourceColumn="TrainTo" DataSetColumn="TrainTo" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NeuronsTableAdapter" GeneratorDataComponentClassName="NeuronsTableAdapter" Name="Neurons" UserDataComponentName="NeuronsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.Neurons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Neurons] WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([NeuronIndex] = @Original_NeuronIndex) AND ((@IsNull_Output = 1 AND [Output] IS NULL) OR ([Output] = @Original_Output)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Output" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Output" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Output" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Output" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Neurons] ([NetworkId], [LayerIndex], [NeuronIndex], [Output]) VALUES (@NetworkId, @LayerIndex, @NeuronIndex, @Output);
SELECT NetworkId, LayerIndex, NeuronIndex, Output FROM Neurons WHERE (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (NeuronIndex = @NeuronIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Output" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Output" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT NetworkId, LayerIndex, NeuronIndex, Output FROM Neurons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Neurons] SET [NetworkId] = @NetworkId, [LayerIndex] = @LayerIndex, [NeuronIndex] = @NeuronIndex, [Output] = @Output WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([NeuronIndex] = @Original_NeuronIndex) AND ((@IsNull_Output = 1 AND [Output] IS NULL) OR ([Output] = @Original_Output)));
SELECT NetworkId, LayerIndex, NeuronIndex, Output FROM Neurons WHERE (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (NeuronIndex = @NeuronIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Output" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Output" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NeuronIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NeuronIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Output" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Output" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Output" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Output" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NetworkId" DataSetColumn="NetworkId" />
              <Mapping SourceColumn="LayerIndex" DataSetColumn="LayerIndex" />
              <Mapping SourceColumn="NeuronIndex" DataSetColumn="NeuronIndex" />
              <Mapping SourceColumn="Output" DataSetColumn="Output" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WeightsTableAdapter" GeneratorDataComponentClassName="WeightsTableAdapter" Name="Weights" UserDataComponentName="WeightsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.Weights" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Weights] WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([WeightIndex] = @Original_WeightIndex) AND ((@IsNull_Value = 1 AND [Value] IS NULL) OR ([Value] = @Original_Value)) AND ((@IsNull_DiagonalHessian = 1 AND [DiagonalHessian] IS NULL) OR ([DiagonalHessian] = @Original_DiagonalHessian)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeightIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DiagonalHessian" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DiagonalHessian" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_DiagonalHessian" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DiagonalHessian" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Weights] ([NetworkId], [LayerIndex], [WeightIndex], [Value], [DiagonalHessian]) VALUES (@NetworkId, @LayerIndex, @WeightIndex, @Value, @DiagonalHessian);
SELECT NetworkId, LayerIndex, WeightIndex, Value, DiagonalHessian FROM Weights WHERE (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (WeightIndex = @WeightIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeightIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@DiagonalHessian" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DiagonalHessian" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT NetworkId, LayerIndex, WeightIndex, Value, DiagonalHessian FROM Weights</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Weights] SET [NetworkId] = @NetworkId, [LayerIndex] = @LayerIndex, [WeightIndex] = @WeightIndex, [Value] = @Value, [DiagonalHessian] = @DiagonalHessian WHERE (([NetworkId] = @Original_NetworkId) AND ([LayerIndex] = @Original_LayerIndex) AND ([WeightIndex] = @Original_WeightIndex) AND ((@IsNull_Value = 1 AND [Value] IS NULL) OR ([Value] = @Original_Value)) AND ((@IsNull_DiagonalHessian = 1 AND [DiagonalHessian] IS NULL) OR ([DiagonalHessian] = @Original_DiagonalHessian)));
SELECT NetworkId, LayerIndex, WeightIndex, Value, DiagonalHessian FROM Weights WHERE (LayerIndex = @LayerIndex) AND (NetworkId = @NetworkId) AND (WeightIndex = @WeightIndex)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeightIndex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@DiagonalHessian" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DiagonalHessian" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Guid" Direction="Input" ParameterName="@Original_NetworkId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="0" SourceColumn="NetworkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LayerIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LayerIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WeightIndex" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WeightIndex" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DiagonalHessian" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DiagonalHessian" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_DiagonalHessian" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="DiagonalHessian" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NetworkId" DataSetColumn="NetworkId" />
              <Mapping SourceColumn="LayerIndex" DataSetColumn="LayerIndex" />
              <Mapping SourceColumn="WeightIndex" DataSetColumn="WeightIndex" />
              <Mapping SourceColumn="Value" DataSetColumn="Value" />
              <Mapping SourceColumn="DiagonalHessian" DataSetColumn="DiagonalHessian" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LossFunctionsTableAdapter" GeneratorDataComponentClassName="LossFunctionsTableAdapter" Name="LossFunctions" UserDataComponentName="LossFunctionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NeuralNetworkConnectionString (Settings)" DbObjectName="NeuralNetwork.dbo.LossFunctions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LossFunctions] WHERE (([LossFunction] = @Original_LossFunction) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LossFunction" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LossFunction" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LossFunctions] ([Name]) VALUES (@Name);
SELECT LossFunction, Name FROM LossFunctions WHERE (LossFunction = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LossFunction, Name FROM dbo.LossFunctions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LossFunctions] SET [Name] = @Name WHERE (([LossFunction] = @Original_LossFunction) AND ([Name] = @Original_Name));
SELECT LossFunction, Name FROM LossFunctions WHERE (LossFunction = @LossFunction)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LossFunction" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LossFunction" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LossFunction" ColumnName="LossFunction" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LossFunction" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LossFunction" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LossFunction" DataSetColumn="LossFunction" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="NeuralNetworkDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="NeuralNetworkDataSet" msprop:Generator_UserDSName="NeuralNetworkDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Connections" msprop:Generator_TableClassName="ConnectionsDataTable" msprop:Generator_TableVarName="tableConnections" msprop:Generator_TablePropName="Connections" msprop:Generator_RowDeletingName="ConnectionsRowDeleting" msprop:Generator_UserTableName="Connections" msprop:Generator_RowChangingName="ConnectionsRowChanging" msprop:Generator_RowEvHandlerName="ConnectionsRowChangeEventHandler" msprop:Generator_RowDeletedName="ConnectionsRowDeleted" msprop:Generator_RowEvArgName="ConnectionsRowChangeEvent" msprop:Generator_RowChangedName="ConnectionsRowChanged" msprop:Generator_RowClassName="ConnectionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NetworkId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnNetworkId" msprop:Generator_ColumnPropNameInRow="NetworkId" msprop:Generator_ColumnPropNameInTable="NetworkIdColumn" msprop:Generator_UserColumnName="NetworkId" type="xs:string" />
              <xs:element name="LayerIndex" msprop:Generator_ColumnVarNameInTable="columnLayerIndex" msprop:Generator_ColumnPropNameInRow="LayerIndex" msprop:Generator_ColumnPropNameInTable="LayerIndexColumn" msprop:Generator_UserColumnName="LayerIndex" type="xs:int" />
              <xs:element name="NeuronIndex" msprop:Generator_ColumnVarNameInTable="columnNeuronIndex" msprop:Generator_ColumnPropNameInRow="NeuronIndex" msprop:Generator_ColumnPropNameInTable="NeuronIndexColumn" msprop:Generator_UserColumnName="NeuronIndex" type="xs:int" />
              <xs:element name="ConnectionIndex" msprop:Generator_ColumnVarNameInTable="columnConnectionIndex" msprop:Generator_ColumnPropNameInRow="ConnectionIndex" msprop:Generator_ColumnPropNameInTable="ConnectionIndexColumn" msprop:Generator_UserColumnName="ConnectionIndex" type="xs:int" />
              <xs:element name="ToNeuronIndex" msprop:Generator_ColumnVarNameInTable="columnToNeuronIndex" msprop:Generator_ColumnPropNameInRow="ToNeuronIndex" msprop:Generator_ColumnPropNameInTable="ToNeuronIndexColumn" msprop:Generator_UserColumnName="ToNeuronIndex" type="xs:int" />
              <xs:element name="ToWeightIndex" msprop:Generator_ColumnVarNameInTable="columnToWeightIndex" msprop:Generator_ColumnPropNameInRow="ToWeightIndex" msprop:Generator_ColumnPropNameInTable="ToWeightIndexColumn" msprop:Generator_UserColumnName="ToWeightIndex" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="KernelTypes" msprop:Generator_TableClassName="KernelTypesDataTable" msprop:Generator_TableVarName="tableKernelTypes" msprop:Generator_TablePropName="KernelTypes" msprop:Generator_RowDeletingName="KernelTypesRowDeleting" msprop:Generator_UserTableName="KernelTypes" msprop:Generator_RowChangingName="KernelTypesRowChanging" msprop:Generator_RowEvHandlerName="KernelTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="KernelTypesRowDeleted" msprop:Generator_RowEvArgName="KernelTypesRowChangeEvent" msprop:Generator_RowChangedName="KernelTypesRowChanged" msprop:Generator_RowClassName="KernelTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="KernelType" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnKernelType" msprop:Generator_ColumnPropNameInRow="KernelType" msprop:Generator_ColumnPropNameInTable="KernelTypeColumn" msprop:Generator_UserColumnName="KernelType" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Layers" msprop:Generator_TableClassName="LayersDataTable" msprop:Generator_TableVarName="tableLayers" msprop:Generator_TablePropName="Layers" msprop:Generator_RowDeletingName="LayersRowDeleting" msprop:Generator_UserTableName="Layers" msprop:Generator_RowChangingName="LayersRowChanging" msprop:Generator_RowEvHandlerName="LayersRowChangeEventHandler" msprop:Generator_RowDeletedName="LayersRowDeleted" msprop:Generator_RowEvArgName="LayersRowChangeEvent" msprop:Generator_RowChangedName="LayersRowChanged" msprop:Generator_RowClassName="LayersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NetworkId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnNetworkId" msprop:Generator_ColumnPropNameInRow="NetworkId" msprop:Generator_ColumnPropNameInTable="NetworkIdColumn" msprop:Generator_UserColumnName="NetworkId" type="xs:string" />
              <xs:element name="LayerIndex" msprop:Generator_ColumnVarNameInTable="columnLayerIndex" msprop:Generator_ColumnPropNameInRow="LayerIndex" msprop:Generator_ColumnPropNameInTable="LayerIndexColumn" msprop:Generator_UserColumnName="LayerIndex" type="xs:int" />
              <xs:element name="LayerType" msprop:Generator_ColumnVarNameInTable="columnLayerType" msprop:Generator_ColumnPropNameInRow="LayerType" msprop:Generator_ColumnPropNameInTable="LayerTypeColumn" msprop:Generator_UserColumnName="LayerType" type="xs:int" />
              <xs:element name="KernelType" msprop:Generator_ColumnVarNameInTable="columnKernelType" msprop:Generator_ColumnPropNameInRow="KernelType" msprop:Generator_ColumnPropNameInTable="KernelTypeColumn" msprop:Generator_UserColumnName="KernelType" type="xs:int" />
              <xs:element name="NeuronCount" msprop:Generator_ColumnVarNameInTable="columnNeuronCount" msprop:Generator_ColumnPropNameInRow="NeuronCount" msprop:Generator_ColumnPropNameInTable="NeuronCountColumn" msprop:Generator_UserColumnName="NeuronCount" type="xs:int" />
              <xs:element name="UseMapInfo" msprop:Generator_ColumnVarNameInTable="columnUseMapInfo" msprop:Generator_ColumnPropNameInRow="UseMapInfo" msprop:Generator_ColumnPropNameInTable="UseMapInfoColumn" msprop:Generator_UserColumnName="UseMapInfo" type="xs:boolean" />
              <xs:element name="MapCount" msprop:Generator_ColumnVarNameInTable="columnMapCount" msprop:Generator_ColumnPropNameInRow="MapCount" msprop:Generator_ColumnPropNameInTable="MapCountColumn" msprop:Generator_UserColumnName="MapCount" type="xs:int" />
              <xs:element name="MapWidth" msprop:Generator_ColumnVarNameInTable="columnMapWidth" msprop:Generator_ColumnPropNameInRow="MapWidth" msprop:Generator_ColumnPropNameInTable="MapWidthColumn" msprop:Generator_UserColumnName="MapWidth" type="xs:int" />
              <xs:element name="MapHeight" msprop:Generator_ColumnVarNameInTable="columnMapHeight" msprop:Generator_ColumnPropNameInRow="MapHeight" msprop:Generator_ColumnPropNameInTable="MapHeightColumn" msprop:Generator_UserColumnName="MapHeight" type="xs:int" />
              <xs:element name="IsFullyMapped" msprop:Generator_ColumnVarNameInTable="columnIsFullyMapped" msprop:Generator_ColumnPropNameInRow="IsFullyMapped" msprop:Generator_ColumnPropNameInTable="IsFullyMappedColumn" msprop:Generator_UserColumnName="IsFullyMapped" type="xs:boolean" />
              <xs:element name="ReceptiveFieldWidth" msprop:Generator_ColumnVarNameInTable="columnReceptiveFieldWidth" msprop:Generator_ColumnPropNameInRow="ReceptiveFieldWidth" msprop:Generator_ColumnPropNameInTable="ReceptiveFieldWidthColumn" msprop:Generator_UserColumnName="ReceptiveFieldWidth" type="xs:int" minOccurs="0" />
              <xs:element name="ReceptiveFieldHeight" msprop:Generator_ColumnVarNameInTable="columnReceptiveFieldHeight" msprop:Generator_ColumnPropNameInRow="ReceptiveFieldHeight" msprop:Generator_ColumnPropNameInTable="ReceptiveFieldHeightColumn" msprop:Generator_UserColumnName="ReceptiveFieldHeight" type="xs:int" minOccurs="0" />
              <xs:element name="LockedWeights" msprop:Generator_ColumnVarNameInTable="columnLockedWeights" msprop:Generator_ColumnPropNameInRow="LockedWeights" msprop:Generator_ColumnPropNameInTable="LockedWeightsColumn" msprop:Generator_UserColumnName="LockedWeights" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LayerTypes" msprop:Generator_TableClassName="LayerTypesDataTable" msprop:Generator_TableVarName="tableLayerTypes" msprop:Generator_TablePropName="LayerTypes" msprop:Generator_RowDeletingName="LayerTypesRowDeleting" msprop:Generator_UserTableName="LayerTypes" msprop:Generator_RowChangingName="LayerTypesRowChanging" msprop:Generator_RowEvHandlerName="LayerTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="LayerTypesRowDeleted" msprop:Generator_RowEvArgName="LayerTypesRowChangeEvent" msprop:Generator_RowChangedName="LayerTypesRowChanged" msprop:Generator_RowClassName="LayerTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LayerType" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnLayerType" msprop:Generator_ColumnPropNameInRow="LayerType" msprop:Generator_ColumnPropNameInTable="LayerTypeColumn" msprop:Generator_UserColumnName="LayerType" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TrainingRates" msprop:Generator_TableClassName="TrainingRatesDataTable" msprop:Generator_TableVarName="tableTrainingRates" msprop:Generator_TablePropName="TrainingRates" msprop:Generator_RowDeletingName="TrainingRatesRowDeleting" msprop:Generator_UserTableName="TrainingRates" msprop:Generator_RowChangingName="TrainingRatesRowChanging" msprop:Generator_RowEvHandlerName="TrainingRatesRowChangeEventHandler" msprop:Generator_RowDeletedName="TrainingRatesRowDeleted" msprop:Generator_RowEvArgName="TrainingRatesRowChangeEvent" msprop:Generator_RowChangedName="TrainingRatesRowChanged" msprop:Generator_RowClassName="TrainingRatesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Rate" msprop:Generator_ColumnVarNameInTable="columnRate" msprop:Generator_ColumnPropNameInRow="Rate" msprop:Generator_ColumnPropNameInTable="RateColumn" msprop:Generator_UserColumnName="Rate" type="xs:double" />
              <xs:element name="Epochs" msprop:Generator_ColumnVarNameInTable="columnEpochs" msprop:Generator_ColumnPropNameInRow="Epochs" msprop:Generator_ColumnPropNameInTable="EpochsColumn" msprop:Generator_UserColumnName="Epochs" type="xs:int" />
              <xs:element name="MinimumRate" msprop:Generator_ColumnVarNameInTable="columnMinimumRate" msprop:Generator_ColumnPropNameInRow="MinimumRate" msprop:Generator_ColumnPropNameInTable="MinimumRateColumn" msprop:Generator_UserColumnName="MinimumRate" type="xs:double" />
              <xs:element name="DecayFactor" msprop:Generator_ColumnVarNameInTable="columnDecayFactor" msprop:Generator_ColumnPropNameInRow="DecayFactor" msprop:Generator_ColumnPropNameInTable="DecayFactorColumn" msprop:Generator_UserColumnName="DecayFactor" type="xs:double" />
              <xs:element name="DecayAfterEpochs" msprop:Generator_ColumnVarNameInTable="columnDecayAfterEpochs" msprop:Generator_ColumnPropNameInRow="DecayAfterEpochs" msprop:Generator_ColumnPropNameInTable="DecayAfterEpochsColumn" msprop:Generator_UserColumnName="DecayAfterEpochs" type="xs:int" />
              <xs:element name="WeightSaveTreshold" msprop:Generator_ColumnVarNameInTable="columnWeightSaveTreshold" msprop:Generator_ColumnPropNameInRow="WeightSaveTreshold" msprop:Generator_ColumnPropNameInTable="WeightSaveTresholdColumn" msprop:Generator_UserColumnName="WeightSaveTreshold" type="xs:double" />
              <xs:element name="Distorted" msprop:Generator_ColumnVarNameInTable="columnDistorted" msprop:Generator_ColumnPropNameInRow="Distorted" msprop:Generator_ColumnPropNameInTable="DistortedColumn" msprop:Generator_UserColumnName="Distorted" type="xs:boolean" />
              <xs:element name="SameDistortionsForEpochs" msprop:Generator_ColumnVarNameInTable="columnSameDistortionsForEpochs" msprop:Generator_ColumnPropNameInRow="SameDistortionsForEpochs" msprop:Generator_ColumnPropNameInTable="SameDistortionsForEpochsColumn" msprop:Generator_UserColumnName="SameDistortionsForEpochs" type="xs:int" />
              <xs:element name="SeverityFactor" msprop:Generator_ColumnVarNameInTable="columnSeverityFactor" msprop:Generator_ColumnPropNameInRow="SeverityFactor" msprop:Generator_ColumnPropNameInTable="SeverityFactorColumn" msprop:Generator_UserColumnName="SeverityFactor" type="xs:double" />
              <xs:element name="MaxScaling" msprop:Generator_ColumnVarNameInTable="columnMaxScaling" msprop:Generator_ColumnPropNameInRow="MaxScaling" msprop:Generator_ColumnPropNameInTable="MaxScalingColumn" msprop:Generator_UserColumnName="MaxScaling" type="xs:double" />
              <xs:element name="MaxRotation" msprop:Generator_ColumnVarNameInTable="columnMaxRotation" msprop:Generator_ColumnPropNameInRow="MaxRotation" msprop:Generator_ColumnPropNameInTable="MaxRotationColumn" msprop:Generator_UserColumnName="MaxRotation" type="xs:double" />
              <xs:element name="ElasticSigma" msprop:Generator_ColumnVarNameInTable="columnElasticSigma" msprop:Generator_ColumnPropNameInRow="ElasticSigma" msprop:Generator_ColumnPropNameInTable="ElasticSigmaColumn" msprop:Generator_UserColumnName="ElasticSigma" type="xs:double" />
              <xs:element name="ElasticScaling" msprop:Generator_ColumnVarNameInTable="columnElasticScaling" msprop:Generator_ColumnPropNameInRow="ElasticScaling" msprop:Generator_ColumnPropNameInTable="ElasticScalingColumn" msprop:Generator_UserColumnName="ElasticScaling" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Mappings" msprop:Generator_TableClassName="MappingsDataTable" msprop:Generator_TableVarName="tableMappings" msprop:Generator_TablePropName="Mappings" msprop:Generator_RowDeletingName="MappingsRowDeleting" msprop:Generator_UserTableName="Mappings" msprop:Generator_RowChangingName="MappingsRowChanging" msprop:Generator_RowEvHandlerName="MappingsRowChangeEventHandler" msprop:Generator_RowDeletedName="MappingsRowDeleted" msprop:Generator_RowEvArgName="MappingsRowChangeEvent" msprop:Generator_RowChangedName="MappingsRowChanged" msprop:Generator_RowClassName="MappingsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NetworkId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnNetworkId" msprop:Generator_ColumnPropNameInRow="NetworkId" msprop:Generator_ColumnPropNameInTable="NetworkIdColumn" msprop:Generator_UserColumnName="NetworkId" type="xs:string" />
              <xs:element name="LayerIndex" msprop:Generator_ColumnVarNameInTable="columnLayerIndex" msprop:Generator_ColumnPropNameInRow="LayerIndex" msprop:Generator_ColumnPropNameInTable="LayerIndexColumn" msprop:Generator_UserColumnName="LayerIndex" type="xs:int" />
              <xs:element name="PreviousMapIndex" msprop:Generator_ColumnVarNameInTable="columnPreviousMapIndex" msprop:Generator_ColumnPropNameInRow="PreviousMapIndex" msprop:Generator_ColumnPropNameInTable="PreviousMapIndexColumn" msprop:Generator_UserColumnName="PreviousMapIndex" type="xs:int" />
              <xs:element name="CurrentMapIndex" msprop:Generator_ColumnVarNameInTable="columnCurrentMapIndex" msprop:Generator_ColumnPropNameInRow="CurrentMapIndex" msprop:Generator_ColumnPropNameInTable="CurrentMapIndexColumn" msprop:Generator_UserColumnName="CurrentMapIndex" type="xs:int" />
              <xs:element name="IsMapped" msprop:Generator_ColumnVarNameInTable="columnIsMapped" msprop:Generator_ColumnPropNameInRow="IsMapped" msprop:Generator_ColumnPropNameInTable="IsMappedColumn" msprop:Generator_UserColumnName="IsMapped" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MNISTTesting" msprop:Generator_TableClassName="MNISTTestingDataTable" msprop:Generator_TableVarName="tableMNISTTesting" msprop:Generator_TablePropName="MNISTTesting" msprop:Generator_RowDeletingName="MNISTTestingRowDeleting" msprop:Generator_UserTableName="MNISTTesting" msprop:Generator_RowChangingName="MNISTTestingRowChanging" msprop:Generator_RowEvHandlerName="MNISTTestingRowChangeEventHandler" msprop:Generator_RowDeletedName="MNISTTestingRowDeleted" msprop:Generator_RowEvArgName="MNISTTestingRowChangeEvent" msprop:Generator_RowChangedName="MNISTTestingRowChanged" msprop:Generator_RowClassName="MNISTTestingRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Index" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnIndex" msprop:Generator_ColumnPropNameInRow="Index" msprop:Generator_ColumnPropNameInTable="IndexColumn" msprop:Generator_UserColumnName="Index" type="xs:int" />
              <xs:element name="Label" msprop:Generator_ColumnVarNameInTable="columnLabel" msprop:Generator_ColumnPropNameInRow="Label" msprop:Generator_ColumnPropNameInTable="LabelColumn" msprop:Generator_UserColumnName="Label" type="xs:int" />
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MNISTTraining" msprop:Generator_TableClassName="MNISTTrainingDataTable" msprop:Generator_TableVarName="tableMNISTTraining" msprop:Generator_TablePropName="MNISTTraining" msprop:Generator_RowDeletingName="MNISTTrainingRowDeleting" msprop:Generator_UserTableName="MNISTTraining" msprop:Generator_RowChangingName="MNISTTrainingRowChanging" msprop:Generator_RowEvHandlerName="MNISTTrainingRowChangeEventHandler" msprop:Generator_RowDeletedName="MNISTTrainingRowDeleted" msprop:Generator_RowEvArgName="MNISTTrainingRowChangeEvent" msprop:Generator_RowChangedName="MNISTTrainingRowChanged" msprop:Generator_RowClassName="MNISTTrainingRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Index" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnIndex" msprop:Generator_ColumnPropNameInRow="Index" msprop:Generator_ColumnPropNameInTable="IndexColumn" msprop:Generator_UserColumnName="Index" type="xs:int" />
              <xs:element name="Label" msprop:Generator_ColumnVarNameInTable="columnLabel" msprop:Generator_ColumnPropNameInRow="Label" msprop:Generator_ColumnPropNameInTable="LabelColumn" msprop:Generator_UserColumnName="Label" type="xs:int" />
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="NeuralNetworks" msprop:Generator_TableClassName="NeuralNetworksDataTable" msprop:Generator_TableVarName="tableNeuralNetworks" msprop:Generator_TablePropName="NeuralNetworks" msprop:Generator_RowDeletingName="NeuralNetworksRowDeleting" msprop:Generator_UserTableName="NeuralNetworks" msprop:Generator_RowChangingName="NeuralNetworksRowChanging" msprop:Generator_RowEvHandlerName="NeuralNetworksRowChangeEventHandler" msprop:Generator_RowDeletedName="NeuralNetworksRowDeleted" msprop:Generator_RowEvArgName="NeuralNetworksRowChangeEvent" msprop:Generator_RowChangedName="NeuralNetworksRowChanged" msprop:Generator_RowClassName="NeuralNetworksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NetworkId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnNetworkId" msprop:Generator_ColumnPropNameInRow="NetworkId" msprop:Generator_ColumnPropNameInTable="NetworkIdColumn" msprop:Generator_UserColumnName="NetworkId" type="xs:string" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreatedOn" msprop:Generator_ColumnVarNameInTable="columnCreatedOn" msprop:Generator_ColumnPropNameInRow="CreatedOn" msprop:Generator_ColumnPropNameInTable="CreatedOnColumn" msprop:Generator_UserColumnName="CreatedOn" type="xs:dateTime" />
              <xs:element name="TrainTo" msprop:Generator_ColumnVarNameInTable="columnTrainTo" msprop:Generator_ColumnPropNameInRow="TrainTo" msprop:Generator_ColumnPropNameInTable="TrainToColumn" msprop:Generator_UserColumnName="TrainTo" type="xs:double" />
              <xs:element name="LossFunction" msprop:Generator_ColumnVarNameInTable="columnLossFunction" msprop:Generator_ColumnPropNameInRow="LossFunction" msprop:Generator_ColumnPropNameInTable="LossFunctionColumn" msprop:Generator_UserColumnName="LossFunction" type="xs:int" />
              <xs:element name="DMicron" msprop:Generator_ColumnVarNameInTable="columnDMicron" msprop:Generator_ColumnPropNameInRow="DMicron" msprop:Generator_ColumnPropNameInTable="DMicronColumn" msprop:Generator_UserColumnName="DMicron" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Neurons" msprop:Generator_TableClassName="NeuronsDataTable" msprop:Generator_TableVarName="tableNeurons" msprop:Generator_TablePropName="Neurons" msprop:Generator_RowDeletingName="NeuronsRowDeleting" msprop:Generator_UserTableName="Neurons" msprop:Generator_RowChangingName="NeuronsRowChanging" msprop:Generator_RowEvHandlerName="NeuronsRowChangeEventHandler" msprop:Generator_RowDeletedName="NeuronsRowDeleted" msprop:Generator_RowEvArgName="NeuronsRowChangeEvent" msprop:Generator_RowChangedName="NeuronsRowChanged" msprop:Generator_RowClassName="NeuronsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NetworkId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnNetworkId" msprop:Generator_ColumnPropNameInRow="NetworkId" msprop:Generator_ColumnPropNameInTable="NetworkIdColumn" msprop:Generator_UserColumnName="NetworkId" type="xs:string" />
              <xs:element name="LayerIndex" msprop:Generator_ColumnVarNameInTable="columnLayerIndex" msprop:Generator_ColumnPropNameInRow="LayerIndex" msprop:Generator_ColumnPropNameInTable="LayerIndexColumn" msprop:Generator_UserColumnName="LayerIndex" type="xs:int" />
              <xs:element name="NeuronIndex" msprop:Generator_ColumnVarNameInTable="columnNeuronIndex" msprop:Generator_ColumnPropNameInRow="NeuronIndex" msprop:Generator_ColumnPropNameInTable="NeuronIndexColumn" msprop:Generator_UserColumnName="NeuronIndex" type="xs:int" />
              <xs:element name="Output" msprop:Generator_ColumnVarNameInTable="columnOutput" msprop:Generator_ColumnPropNameInRow="Output" msprop:Generator_ColumnPropNameInTable="OutputColumn" msprop:Generator_UserColumnName="Output" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Weights" msprop:Generator_TableClassName="WeightsDataTable" msprop:Generator_TableVarName="tableWeights" msprop:Generator_TablePropName="Weights" msprop:Generator_RowDeletingName="WeightsRowDeleting" msprop:Generator_UserTableName="Weights" msprop:Generator_RowChangingName="WeightsRowChanging" msprop:Generator_RowEvHandlerName="WeightsRowChangeEventHandler" msprop:Generator_RowDeletedName="WeightsRowDeleted" msprop:Generator_RowEvArgName="WeightsRowChangeEvent" msprop:Generator_RowChangedName="WeightsRowChanged" msprop:Generator_RowClassName="WeightsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NetworkId" msdata:DataType="System.Guid, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_ColumnVarNameInTable="columnNetworkId" msprop:Generator_ColumnPropNameInRow="NetworkId" msprop:Generator_ColumnPropNameInTable="NetworkIdColumn" msprop:Generator_UserColumnName="NetworkId" type="xs:string" />
              <xs:element name="LayerIndex" msprop:Generator_ColumnVarNameInTable="columnLayerIndex" msprop:Generator_ColumnPropNameInRow="LayerIndex" msprop:Generator_ColumnPropNameInTable="LayerIndexColumn" msprop:Generator_UserColumnName="LayerIndex" type="xs:int" />
              <xs:element name="WeightIndex" msprop:Generator_ColumnVarNameInTable="columnWeightIndex" msprop:Generator_ColumnPropNameInRow="WeightIndex" msprop:Generator_ColumnPropNameInTable="WeightIndexColumn" msprop:Generator_UserColumnName="WeightIndex" type="xs:int" />
              <xs:element name="Value" msprop:Generator_ColumnVarNameInTable="columnValue" msprop:Generator_ColumnPropNameInRow="Value" msprop:Generator_ColumnPropNameInTable="ValueColumn" msprop:Generator_UserColumnName="Value" type="xs:double" minOccurs="0" />
              <xs:element name="DiagonalHessian" msprop:Generator_ColumnVarNameInTable="columnDiagonalHessian" msprop:Generator_ColumnPropNameInRow="DiagonalHessian" msprop:Generator_ColumnPropNameInTable="DiagonalHessianColumn" msprop:Generator_UserColumnName="DiagonalHessian" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LossFunctions" msprop:Generator_TableClassName="LossFunctionsDataTable" msprop:Generator_TableVarName="tableLossFunctions" msprop:Generator_TablePropName="LossFunctions" msprop:Generator_RowDeletingName="LossFunctionsRowDeleting" msprop:Generator_UserTableName="LossFunctions" msprop:Generator_RowChangingName="LossFunctionsRowChanging" msprop:Generator_RowEvHandlerName="LossFunctionsRowChangeEventHandler" msprop:Generator_RowDeletedName="LossFunctionsRowDeleted" msprop:Generator_RowEvArgName="LossFunctionsRowChangeEvent" msprop:Generator_RowChangedName="LossFunctionsRowChanged" msprop:Generator_RowClassName="LossFunctionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LossFunction" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnVarNameInTable="columnLossFunction" msprop:Generator_ColumnPropNameInRow="LossFunction" msprop:Generator_ColumnPropNameInTable="LossFunctionColumn" msprop:Generator_UserColumnName="LossFunction" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Connections" />
      <xs:field xpath="mstns:NetworkId" />
      <xs:field xpath="mstns:LayerIndex" />
      <xs:field xpath="mstns:NeuronIndex" />
      <xs:field xpath="mstns:ConnectionIndex" />
    </xs:unique>
    <xs:unique name="KernelTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:KernelTypes" />
      <xs:field xpath="mstns:KernelType" />
    </xs:unique>
    <xs:unique name="Layers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Layers" />
      <xs:field xpath="mstns:NetworkId" />
      <xs:field xpath="mstns:LayerIndex" />
    </xs:unique>
    <xs:unique name="LayerTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LayerTypes" />
      <xs:field xpath="mstns:LayerType" />
    </xs:unique>
    <xs:unique name="Mappings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Mappings" />
      <xs:field xpath="mstns:NetworkId" />
      <xs:field xpath="mstns:LayerIndex" />
      <xs:field xpath="mstns:PreviousMapIndex" />
      <xs:field xpath="mstns:CurrentMapIndex" />
    </xs:unique>
    <xs:unique name="MNISTTesting_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MNISTTesting" />
      <xs:field xpath="mstns:Index" />
    </xs:unique>
    <xs:unique name="MNISTTraining_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MNISTTraining" />
      <xs:field xpath="mstns:Index" />
    </xs:unique>
    <xs:unique name="NeuralNetworks_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:NeuralNetworks" />
      <xs:field xpath="mstns:NetworkId" />
    </xs:unique>
    <xs:unique name="Neurons_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Neurons" />
      <xs:field xpath="mstns:NetworkId" />
      <xs:field xpath="mstns:LayerIndex" />
      <xs:field xpath="mstns:NeuronIndex" />
    </xs:unique>
    <xs:unique name="Weights_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Weights" />
      <xs:field xpath="mstns:NetworkId" />
      <xs:field xpath="mstns:LayerIndex" />
      <xs:field xpath="mstns:WeightIndex" />
    </xs:unique>
    <xs:unique name="LossFunctions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LossFunctions" />
      <xs:field xpath="mstns:LossFunction" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Connections_Neurons" msdata:parent="Neurons" msdata:child="Connections" msdata:parentkey="NetworkId LayerIndex NeuronIndex" msdata:childkey="NetworkId LayerIndex NeuronIndex" msprop:Generator_UserChildTable="Connections" msprop:Generator_ChildPropName="GetConnectionsRows" msprop:Generator_UserParentTable="Neurons" msprop:Generator_UserRelationName="FK_Connections_Neurons" msprop:Generator_RelationVarName="relationFK_Connections_Neurons" msprop:Generator_ParentPropName="NeuronsRowParent" />
      <msdata:Relationship name="FK_Layers_KernelTypes" msdata:parent="KernelTypes" msdata:child="Layers" msdata:parentkey="KernelType" msdata:childkey="KernelType" msprop:Generator_UserChildTable="Layers" msprop:Generator_ChildPropName="GetLayersRows" msprop:Generator_UserParentTable="KernelTypes" msprop:Generator_UserRelationName="FK_Layers_KernelTypes" msprop:Generator_RelationVarName="relationFK_Layers_KernelTypes" msprop:Generator_ParentPropName="KernelTypesRow" />
      <msdata:Relationship name="FK_Layers_LayerTypes" msdata:parent="LayerTypes" msdata:child="Layers" msdata:parentkey="LayerType" msdata:childkey="LayerType" msprop:Generator_UserChildTable="Layers" msprop:Generator_ChildPropName="GetLayersRows" msprop:Generator_UserParentTable="LayerTypes" msprop:Generator_UserRelationName="FK_Layers_LayerTypes" msprop:Generator_RelationVarName="relationFK_Layers_LayerTypes" msprop:Generator_ParentPropName="LayerTypesRow" />
      <msdata:Relationship name="FK_Layers_NeuralNetworks" msdata:parent="NeuralNetworks" msdata:child="Layers" msdata:parentkey="NetworkId" msdata:childkey="NetworkId" msprop:Generator_UserChildTable="Layers" msprop:Generator_ChildPropName="GetLayersRows" msprop:Generator_UserParentTable="NeuralNetworks" msprop:Generator_UserRelationName="FK_Layers_NeuralNetworks" msprop:Generator_RelationVarName="relationFK_Layers_NeuralNetworks" msprop:Generator_ParentPropName="NeuralNetworksRow" />
      <msdata:Relationship name="FK_Mappings_Layers" msdata:parent="Layers" msdata:child="Mappings" msdata:parentkey="NetworkId LayerIndex" msdata:childkey="NetworkId LayerIndex" msprop:Generator_UserChildTable="Mappings" msprop:Generator_ChildPropName="GetMappingsRows" msprop:Generator_UserParentTable="Layers" msprop:Generator_UserRelationName="FK_Mappings_Layers" msprop:Generator_RelationVarName="relationFK_Mappings_Layers" msprop:Generator_ParentPropName="LayersRowParent" />
      <msdata:Relationship name="FK_Neurons_Layers" msdata:parent="Layers" msdata:child="Neurons" msdata:parentkey="NetworkId LayerIndex" msdata:childkey="NetworkId LayerIndex" msprop:Generator_UserChildTable="Neurons" msprop:Generator_ChildPropName="GetNeuronsRows" msprop:Generator_UserParentTable="Layers" msprop:Generator_UserRelationName="FK_Neurons_Layers" msprop:Generator_RelationVarName="relationFK_Neurons_Layers" msprop:Generator_ParentPropName="LayersRowParent" />
      <msdata:Relationship name="FK_Weights_Layers" msdata:parent="Layers" msdata:child="Weights" msdata:parentkey="NetworkId LayerIndex" msdata:childkey="NetworkId LayerIndex" msprop:Generator_UserChildTable="Weights" msprop:Generator_ChildPropName="GetWeightsRows" msprop:Generator_UserParentTable="Layers" msprop:Generator_UserRelationName="FK_Weights_Layers" msprop:Generator_RelationVarName="relationFK_Weights_Layers" msprop:Generator_ParentPropName="LayersRowParent" />
      <msdata:Relationship name="LossFunctions_NeuralNetworks" msdata:parent="LossFunctions" msdata:child="NeuralNetworks" msdata:parentkey="LossFunction" msdata:childkey="LossFunction" msprop:Generator_UserChildTable="NeuralNetworks" msprop:Generator_ChildPropName="GetNeuralNetworksRows" msprop:Generator_ParentPropName="LossFunctionsRow" msprop:Generator_UserRelationName="LossFunctions_NeuralNetworks" msprop:Generator_RelationVarName="relationLossFunctions_NeuralNetworks" msprop:Generator_UserParentTable="LossFunctions" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>